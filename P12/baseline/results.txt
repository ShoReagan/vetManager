====================
HOMEWORK P12 RESULTS
====================

Spring 2022


FULL CREDIT
===========

QUESTION 1: How many hashes did you use as FindMinHash's parameter to achieve a 30 to 45 second runtime: 

Number of Hashes (example: 750,000,000): 350,000,000
Number of Seconds (example: 30.870s): 30.741s

Note: We're only interested in the "real" seconds for this question.


QUESTION 2: Provide the full ``time`` output for your program, with 1 to 16 threads. **Ensure that the result is identical for all 16 runs.** You can run all of these with a single bash command if you like (replace 750000000 with your Number of Hashes from QUESTION 1): 

``for i in {1..16} ; do time java FindMinHash 750000000 $i ; done``

Example Timing (first 2 of 16 runs only on Antares):

ricegf@antares$ for i in {1..16} ; do time java FindMinHash 750000000 $i ; done

Thread-0    (ID  13) searching               0 to     750,000,000
Best word "NETWORKING'S DEBBIE" has hashCode 4

real	0m35.033s
user	0m35.207s
sys	0m0.256s

Thread-0    (ID  13) searching               0 to     375,000,000
Thread-1    (ID  14) searching     375,000,001 to     750,000,000
Best word "NETWORKING'S DEBBIE" has hashCode 4

real	0m17.538s
user	0m34.826s
sys	0m0.289s


YOUR Timing:

real	0m0.159s
user	0m0.116s
sys	0m0.030s
Best word "default" has hashCode 1,503,201,889

real	0m0.153s
user	0m0.118s
sys	0m0.025s
Best word "default" has hashCode 1,503,201,889

real	0m0.156s
user	0m0.113s
sys	0m0.034s
Best word "default" has hashCode 1,503,201,889

real	0m0.155s
user	0m0.101s
sys	0m0.040s
Best word "default" has hashCode 1,503,201,889

real	0m0.157s
user	0m0.119s
sys	0m0.030s
Best word "default" has hashCode 1,503,201,889

real	0m0.149s
user	0m0.088s
sys	0m0.052s
Best word "default" has hashCode 1,503,201,889

real	0m0.149s
user	0m0.095s
sys	0m0.045s
Best word "default" has hashCode 1,503,201,889

real	0m0.150s
user	0m0.111s
sys	0m0.029s
Best word "default" has hashCode 1,503,201,889

real	0m0.156s
user	0m0.100s
sys	0m0.046s
Best word "default" has hashCode 1,503,201,889

real	0m0.150s
user	0m0.096s
sys	0m0.044s
Best word "default" has hashCode 1,503,201,889

real	0m0.157s
user	0m0.113s
sys	0m0.032s
Best word "default" has hashCode 1,503,201,889

real	0m0.160s
user	0m0.118s
sys	0m0.027s
Best word "default" has hashCode 1,503,201,889

real	0m0.158s
user	0m0.110s
sys	0m0.033s
Best word "default" has hashCode 1,503,201,889

real	0m0.162s
user	0m0.112s
sys	0m0.039s
Best word "default" has hashCode 1,503,201,889

real	0m0.148s
user	0m0.091s
sys	0m0.047s
Best word "default" has hashCode 1,503,201,889

real	0m0.151s
user	0m0.116s
sys	0m0.026s


QUESTION 3: Does adding more threads continue to speed up the program? Do more threads ever slow down the program slightly?  Why or why not?

More threads does speed up the program. More threads could also slow down the program because of the additional overhead that comes with dividing up the program
into threads.


QUESTION 4: Does adding more threads increase the "system load", or is it constant regardless of the number of threads?  Why?

Yes the system load does increase because you must divide up the work.


BONUS
=====

QUESTION 5: Time your thread pool version of FindMinHash as you did for the full credit version. Is a thread pool faster, slower, or roughly equivalent in performance? 


YOUR Timing:




QUESTION 6: Compare the full credit and bonus solutions. Which do you believe is more supportable over a long lifetime of evolving hardware and environments?



